public class Solution {
    public static String longestCommonPrefix(String[] strs) {
        // Edge case: check if the array is null or empty
        if (strs == null || strs.length == 0) {
            return "";
        }
        
        // Start with the first string as the initial prefix
        String prefix = strs[0];
        
        // Iterate through each string in the array starting from the second one
        for (int i = 1; i < strs.length; i++) {
            String currentString = strs[i];
            
            // While the current string does not start with the prefix
            while (currentString.indexOf(prefix) != 0 && prefix.length() > 0) {
                // Reduce the prefix by one character from the end
                prefix = prefix.substring(0, prefix.length() - 1);
            }
        }
        
        return prefix; // Return the longest common prefix found
    }

    public static void main(String[] args) {
        // Example usage
        String[] strs1 = {"flower", "flow", "flight"};
        System.out.println("Output: \"" + longestCommonPrefix(strs1) + "\"");  // Output: "fl"

        String[] strs2 = {"dog", "racecar", "car"};
        System.out.println("Output: \"" + longestCommonPrefix(strs2) + "\"");  // Output: ""
    }
}
